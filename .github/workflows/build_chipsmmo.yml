# This is a basic workflow to help you get started with Actions

name: Build ChipsMMO and deploy to server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm install -g typescript
      
      - name: npm install
        run: npm install
          
      - name: compile typescript
        run: tsc
      
      - name: move chipsmmo levels to dist
        run: cp ./CHIPS_MMO.dat ./dist/CHIPS_MMO.dat

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }} 
          known_hosts: 'filler' # Next action step will find the known hosts

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST_IP }} >> ~/.ssh/known_hosts

      - name: list file to ensure everything is good
        run: ls

      - name: Install rsync on the server
        run: |
          ssh root@${{ secrets.SSH_HOST_IP }}
          apt-get install rsync
          exit

      - name: deploy chipsmmo with rsync
        uses: Burnett01/rsync-deployments@0dc935cdecc5f5e571865e60d2a6cdc673704823
        with:
          # The switches
          switches: -avz
          # The local path
          path: ./dist/
          # The remote path
          remote_path: /home/dist/
          # The remote host
          remote_host: ${{ secrets.SSH_HOST_IP }}
          # The remote user
          remote_user: root
          # The remote key
          remote_key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }} 

      # SSH and exit
      - name: Connect
        run: |
          ssh root@${{ secrets.SSH_HOST_IP }}
          ls
          exit
